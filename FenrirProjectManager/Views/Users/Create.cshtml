@using Microsoft.Ajax.Utilities
@using Model.Consts
@using Model.Enums
@model Model.Models.User

@{ // you can put the following in a back-end method and pass through ViewBag
    var selectList = Enum.GetValues(typeof(UserRole))
                         .Cast<UserRole>()
                         .Where(e => e != UserRole.Administrator)
                         .Select(e => new SelectListItem
                         {
                             Value = ((int)e).ToString(),
                             Text = e.ToString()
                         });
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enter user details:</h4>

        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.UserRole, htmlAttributes: new {@class = "control-label col-md-2"})
            @Html.DropDownListFor(m => m.UserRole, selectList)
            @Html.ValidationMessageFor(model => model.UserRole, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="center row">
            <a class="btn btn-form grey waves-effect waves-light" href="@Url.Action(MVC.Users.Index())">Cancel</a>
            <button class="btn btn-form blue lighten-1 waves-effect waves-light" type="submit" name="action">Save</button>
        </div>
    </div>
}
