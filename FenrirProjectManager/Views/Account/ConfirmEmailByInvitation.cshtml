@model FenrirProjectManager.Models.ConfirmEmailByInvitationViewModel

@{
    string userId = ViewBag.UserId;
    string userToken = ViewBag.UserToken;
}


@using (Html.BeginForm(MVC.Account.ConfirmEmailByInvitation(userId, userToken), FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Email)
        @Html.HiddenFor(model => model.UserId)
        @Html.HiddenFor(model => model.UserToken)

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", @disabled = "true"}})
                @Html.ValidationMessageFor(model => model.Email, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="center row">
            <button class="btn btn-form blue lighten-1 waves-effect waves-light" type="submit" name="action">Confirm</button>
        </div>
    </div>
}
