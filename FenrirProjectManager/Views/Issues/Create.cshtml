@model Model.Models.Issue

@{
    List<SelectListItem> UsersList = ViewBag.UsersList;
}

<h2>Create new issue</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.CreateUserId)
    @Html.HiddenFor(model => model.CreationDate)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.Progress)

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "materialize-textarea" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control", @id= "datepicker", @type="text" } })
                @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssignUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AssignUserId, UsersList)
                @Html.ValidationMessageFor(model => model.AssignUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row center">
            <a class="btn btn-form grey  waves-effect waves-light" href="@Url.Action(MVC.Issues.Index())">Cancel</a>
            <button class="btn btn-form blue lighten-1 waves-effect waves-light" type="submit" name="action">Add</button>
        </div>
    </div>
}


