@using DataAccessImplementation
@using FenrirProjectManager.Helpers
@using Microsoft.AspNet.Identity
@using Model.Consts
@using Model.Enums

@model IEnumerable<Model.Models.Issue>
@{
    UserRepo _userRepo = new UserRepo();
}

@{
    if (Model.Any(m => m != null))
    {
        <table class="striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th class="center-align">
                    Assigned to

                </th>
                <th class="center-align">
                    @Html.DisplayNameFor(model => model.Type)
                </th>
                <th class="center-align">
                    %
                </th>
                <th class="center-align">
                    @Html.DisplayNameFor(model => model.FinishDate)
                </th>
                <th class="center-align">
                    @Html.Raw("Action")
                </th>

            </tr>

            @foreach (var item in Model)
            {

                <tr>
                    <td>
                        <a href="@Url.Action(MVC.Issues.Details(item.Id))" style="text-decoration: none !important; color:black !important;">
                            @Html.DisplayFor(modelItem => item.Title)
                        </a>
                    </td>
                    <td class="center-align">

                        @{
                            var assignedUser = _userRepo.GetUserById(item.AssignUserId);
                        }

                    </td>
                    <td class="center-align">
                        @{
                            switch (item.Type)
                            {
                                case IssueType.Feature:
                                    <i class="mdi mdi-36px mdi-rocket"></i>
                                    break;
                                case IssueType.Bug:
                                    <i class="mdi mdi-36px mdi-bug"></i>
                                    break;
                                case IssueType.Test:
                                    <i class="mdi mdi-36px mdi-beaker-outline"></i>
                                    break;
                            }
                        }
                    </td>
                    <td class="center-align">
                        <strong>@Html.Raw($"{(int)item.Progress}%")</strong>
                    </td>
                    <td class="center-align">
                        @Html.Raw($"{item.FinishDate:d}")
                    </td>

                    <td class="left-align" style="vertical-align: middle;">

                        @{
                            if (item.CreateUserId.ToString() == User.Identity.GetUserId())
                            {
                                <div>
                                    <a href="@Url.Action(MVC.Issues.Edit(item.Id))" class="black-text">
                                        <i class="mdi mdi-24px mdi-pencil"></i> Edit
                                    </a>
                                </div>

                                if (item.Status == IssueStatus.Finished)
                                {
                                    <div>
                                        <a href="@Url.Action(MVC.Issues.Edit(item.Id))" class="black-text">
                                            <i class="mdi mdi-24px mdi-checkbox-marked-circle-outline"></i> Close
                                        </a>
                                    </div>
                                }
                                if (item.Status == IssueStatus.Closed)
                                {
                                    <div>
                                        <a href="@Url.Action(MVC.Issues.Edit(item.Id))" class="black-text">
                                            <i class="mdi mdi-24px mdi-refresh"></i> Open again
                                        </a>
                                    </div>
                                }


                            }
                            else if (item.AssignUserId.ToString() == User.Identity.GetUserId())
                            {
                                <a href="@Url.Action(MVC.Issues.Edit(item.Id))">
                                    <img src="data:image/png;base64, @Html.Raw(Convert.ToBase64String(ImageManager.GetByteArray(Resources.Images.edit_issue)))"
                                         class="responsive-img tooltipped"
                                         style="margin-top: 4px;"
                                         data-position="bottom"
                                         data-delay="50"
                                         data-tooltip="Edit" />
                                </a>
                            }

                        }
                    </td>

                </tr>
                            }

        </table>
                            }
                            else
                            {
                                if (User.IsInRole(Consts.ProjectManagerRole) || User.IsInRole(Consts.AdministratorRole))
                                {
                                    <div class="row center">
                                        <h5>
                                            No issues to show, but don't worry you can <a class="blue-text green-hover hover-animation" href="@Url.Action(MVC.Issues.Create())">add a new issue</a>
                                        </h5>
                                    </div>
                                }
                            }
}
